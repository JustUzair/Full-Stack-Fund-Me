{
  "address": "0x17f7Cc2cd7C39D6EEcecD080c25c44313034B247",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa5f3c0daa9fae344167d84851a745310b5af8ad790580c7d0cb049270315af37",
  "receipt": {
    "to": null,
    "from": "0xDc11dE6060e0f6011B6c07bB2C0278d7cB5B57EE",
    "contractAddress": "0x17f7Cc2cd7C39D6EEcecD080c25c44313034B247",
    "transactionIndex": 115,
    "gasUsed": "863866",
    "logsBloom": "0x
    "blockHash": "0x95b218b5be03e4958d3ba8789a8320a36083339417c92ad6e775bf75e6322001",
    "transactionHash": "0xa5f3c0daa9fae344167d84851a745310b5af8ad790580c7d0cb049270315af37",
    "logs": [],
    "blockNumber": 8128109,
    "cumulativeGasUsed": "21953529",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 3,
  "solcInputHash": "51e9b4175b9e93107fcc6da575848a5d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    uint256 public constant MINIMUM_USD = 5 * 1e18; // rounding to 18 decimal places\\n    address[] private s_funders; // array of addresses of funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        // Set Minimum fund amount in USD\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough ETH!!\\\"\\n        ); // 1e18 = 1*10**18 == 1000000000000000000 == 1 ETH\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n          \\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0); // new array filled with 0s\\n        //3 ways to withdraw funds\\n\\n        // transfer\\n        /*\\n        payable(msg.sender.transfer(address(this).balance));\\n        */\\n\\n        //send\\n        /*\\n        bool sendSuccess = payable(msg.sender.send(address(this).balance)); // send\\n        require(sendSuccess, \\\"Withdraw failed!!\\\");\\n        */\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"Sender is not the owner!!\\\");\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    function getOwner() public view returns (address){\\n        return i_owner;\\n    }\\n    function getFunder(uint256 index ) public view returns (address){\\n        return s_funders[index];\\n    }\\n    function getAddressToAmountFunded(address funder) public view returns (uint256){\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface){\\n        return s_priceFeed;\\n    }\\n}\\n\\n//Pending : https://youtu.be/gyMwXuJrbJQ?t=45438\\n\",\"keccak256\":\"0x6b7fc7115c409f945a36954d7a32c481708adf4136a6e0c8d32503fee64b1035\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed) public view returns (uint256) {\\r\\n        // ABI\\r\\n        //Address - 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10); // price is returned with total 18 decimal places\\r\\n    }\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // multiplying 1e18 and 1e18 will give number with 36 decimal places, thus we divide it by 1e18\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x62be7db069e301489cf6fc3274e46fb7d717033cf56e945cd87ff7b3c9028452\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610fa4380380610fa483398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e3f610165600039600081816101dc015261042a0152610e3f6000f3fe6080604052600436106100705760003560e01c8063893d20e81161004e578063893d20e8146100f45780639e87a5cd1461011f578063b60d42881461014a578063d7b4750c1461015457610070565b80630343fb25146100755780633ccfd60b146100b25780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906107cd565b610191565b6040516100a99190610813565b60405180910390f35b3480156100be57600080fd5b506100c76101da565b005b3480156100d557600080fd5b506100de61041a565b6040516100eb9190610813565b60405180910390f35b34801561010057600080fd5b50610109610426565b604051610116919061083d565b60405180910390f35b34801561012b57600080fd5b5061013461044e565b60405161014191906108b7565b60405180910390f35b610152610478565b005b34801561016057600080fd5b5061017b600480360381019061017691906108fe565b6105a0565b604051610188919061083d565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561030a5760008082815481106102845761028361092b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030290610989565b915050610262565b50600067ffffffffffffffff811115610326576103256109d2565b5b6040519080825280602002602001820160405280156103545781602001602082028036833780820191505090505b506000908051906020019061036a9291906106c3565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039190610a32565b60006040518083038185875af1925050503d80600081146103ce576040519150601f19603f3d011682016040523d82523d6000602084013e6103d3565b606091505b5050905080610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040e90610aa4565b60405180910390fd5b50565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b674563918244f400006104b6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105e790919063ffffffff16565b10156104f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ee90610b10565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60008082815481106105b5576105b461092b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806105f383610623565b90506000670de0b6b3a7640000858361060c9190610b30565b6106169190610bb9565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561066c57600080fd5b505afa158015610680573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a49190610c77565b5050509150506402540be400816106bb9190610cf2565b915050919050565b82805482825590600052602060002090810192821561073c579160200282015b8281111561073b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106e3565b5b509050610749919061074d565b5090565b5b8082111561076657600081600090555060010161074e565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061079a8261076f565b9050919050565b6107aa8161078f565b81146107b557600080fd5b50565b6000813590506107c7816107a1565b92915050565b6000602082840312156107e3576107e261076a565b5b60006107f1848285016107b8565b91505092915050565b6000819050919050565b61080d816107fa565b82525050565b60006020820190506108286000830184610804565b92915050565b6108378161078f565b82525050565b6000602082019050610852600083018461082e565b92915050565b6000819050919050565b600061087d6108786108738461076f565b610858565b61076f565b9050919050565b600061088f82610862565b9050919050565b60006108a182610884565b9050919050565b6108b181610896565b82525050565b60006020820190506108cc60008301846108a8565b92915050565b6108db816107fa565b81146108e657600080fd5b50565b6000813590506108f8816108d2565b92915050565b6000602082840312156109145761091361076a565b5b6000610922848285016108e9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610994826107fa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109c7576109c661095a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a1c600083610a01565b9150610a2782610a0c565b600082019050919050565b6000610a3d82610a0f565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610a8e600b83610a47565b9150610a9982610a58565b602082019050919050565b60006020820190508181036000830152610abd81610a81565b9050919050565b7f4469646e27742073656e6420656e6f7567682045544821210000000000000000600082015250565b6000610afa601883610a47565b9150610b0582610ac4565b602082019050919050565b60006020820190508181036000830152610b2981610aed565b9050919050565b6000610b3b826107fa565b9150610b46836107fa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b7f57610b7e61095a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bc4826107fa565b9150610bcf836107fa565b925082610bdf57610bde610b8a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c0981610bea565b8114610c1457600080fd5b50565b600081519050610c2681610c00565b92915050565b6000819050919050565b610c3f81610c2c565b8114610c4a57600080fd5b50565b600081519050610c5c81610c36565b92915050565b600081519050610c71816108d2565b92915050565b600080600080600060a08688031215610c9357610c9261076a565b5b6000610ca188828901610c17565b9550506020610cb288828901610c4d565b9450506040610cc388828901610c62565b9350506060610cd488828901610c62565b9250506080610ce588828901610c17565b9150509295509295909350565b6000610cfd82610c2c565b9150610d0883610c2c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d4757610d4661095a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d8457610d8361095a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dc157610dc061095a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dfe57610dfd61095a565b5b82820290509291505056fea2646970667358221220159dae6914cec06cd53e45c2b3288183c614501c0e3f828ae030994dc920a75664736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063893d20e81161004e578063893d20e8146100f45780639e87a5cd1461011f578063b60d42881461014a578063d7b4750c1461015457610070565b80630343fb25146100755780633ccfd60b146100b25780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906107cd565b610191565b6040516100a99190610813565b60405180910390f35b3480156100be57600080fd5b506100c76101da565b005b3480156100d557600080fd5b506100de61041a565b6040516100eb9190610813565b60405180910390f35b34801561010057600080fd5b50610109610426565b604051610116919061083d565b60405180910390f35b34801561012b57600080fd5b5061013461044e565b60405161014191906108b7565b60405180910390f35b610152610478565b005b34801561016057600080fd5b5061017b600480360381019061017691906108fe565b6105a0565b604051610188919061083d565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561030a5760008082815481106102845761028361092b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030290610989565b915050610262565b50600067ffffffffffffffff811115610326576103256109d2565b5b6040519080825280602002602001820160405280156103545781602001602082028036833780820191505090505b506000908051906020019061036a9291906106c3565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039190610a32565b60006040518083038185875af1925050503d80600081146103ce576040519150601f19603f3d011682016040523d82523d6000602084013e6103d3565b606091505b5050905080610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040e90610aa4565b60405180910390fd5b50565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b674563918244f400006104b6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105e790919063ffffffff16565b10156104f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ee90610b10565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60008082815481106105b5576105b461092b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806105f383610623565b90506000670de0b6b3a7640000858361060c9190610b30565b6106169190610bb9565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561066c57600080fd5b505afa158015610680573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a49190610c77565b5050509150506402540be400816106bb9190610cf2565b915050919050565b82805482825590600052602060002090810192821561073c579160200282015b8281111561073b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106e3565b5b509050610749919061074d565b5090565b5b8082111561076657600081600090555060010161074e565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061079a8261076f565b9050919050565b6107aa8161078f565b81146107b557600080fd5b50565b6000813590506107c7816107a1565b92915050565b6000602082840312156107e3576107e261076a565b5b60006107f1848285016107b8565b91505092915050565b6000819050919050565b61080d816107fa565b82525050565b60006020820190506108286000830184610804565b92915050565b6108378161078f565b82525050565b6000602082019050610852600083018461082e565b92915050565b6000819050919050565b600061087d6108786108738461076f565b610858565b61076f565b9050919050565b600061088f82610862565b9050919050565b60006108a182610884565b9050919050565b6108b181610896565b82525050565b60006020820190506108cc60008301846108a8565b92915050565b6108db816107fa565b81146108e657600080fd5b50565b6000813590506108f8816108d2565b92915050565b6000602082840312156109145761091361076a565b5b6000610922848285016108e9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610994826107fa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109c7576109c661095a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a1c600083610a01565b9150610a2782610a0c565b600082019050919050565b6000610a3d82610a0f565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610a8e600b83610a47565b9150610a9982610a58565b602082019050919050565b60006020820190508181036000830152610abd81610a81565b9050919050565b7f4469646e27742073656e6420656e6f7567682045544821210000000000000000600082015250565b6000610afa601883610a47565b9150610b0582610ac4565b602082019050919050565b60006020820190508181036000830152610b2981610aed565b9050919050565b6000610b3b826107fa565b9150610b46836107fa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b7f57610b7e61095a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bc4826107fa565b9150610bcf836107fa565b925082610bdf57610bde610b8a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c0981610bea565b8114610c1457600080fd5b50565b600081519050610c2681610c00565b92915050565b6000819050919050565b610c3f81610c2c565b8114610c4a57600080fd5b50565b600081519050610c5c81610c36565b92915050565b600081519050610c71816108d2565b92915050565b600080600080600060a08688031215610c9357610c9261076a565b5b6000610ca188828901610c17565b9550506020610cb288828901610c4d565b9450506040610cc388828901610c62565b9350506060610cd488828901610c62565b9250506080610ce588828901610c17565b9150509295509295909350565b6000610cfd82610c2c565b9150610d0883610c2c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d4757610d4661095a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d8457610d8361095a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dc157610dc061095a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dfe57610dfd61095a565b5b82820290509291505056fea2646970667358221220159dae6914cec06cd53e45c2b3288183c614501c0e3f828ae030994dc920a75664736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}